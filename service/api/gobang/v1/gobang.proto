syntax = "proto3";

package gobang.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/empty.proto";

option go_package = "service/api/gobang/v1;v1";

// The greeting service definition.
service Gobang {
  rpc Register (RegisterReq) returns (RegisterReply) {
    option (google.api.http) = {
      post: "/member/register",
      body: "*",
    };
  }
  rpc Login (LoginReq) returns (LoginReply) {
    option (google.api.http) = {
      post: "/member/login",
      body: "*",
    };
  }

  rpc MemberStatus (google.protobuf.Empty) returns (StatusReply) {
    option (google.api.http) = {
      get: "/member/status",
    };
  }

  rpc RoomCreate (RoomRequest) returns (RoomReply) {
    option (google.api.http) = {
      post: "/room/create",
      body: "*",
    };
  }
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      get: "/helloworld/{name}"
    };
  }
}

message StatusReply {
  int32 id = 1;
  string username = 2;
}
message  StatusRequest {
  string sessionid = 1;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message RoomRequest {
  string title = 1;
}
message RoomReply {

}

message RegisterReply {
  int64 id = 1;
  string username = 2;
  string lastLoginAt = 3;
  string createdAt = 4;
}

message RegisterReq {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len: 15}];
  string password = 2 [(validate.rules).string = {min_len: 8}];
}

message LoginReq {
  string username = 1 [(validate.rules).string = {min_len: 3, max_len: 15}];
  string password = 2 [(validate.rules).string = {min_len: 8}];
}

message LoginReply {
  string  token = 1;
}